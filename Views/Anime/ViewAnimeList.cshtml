@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using FDMSWeb.Models
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <style type="text/css">
        /* General CSS */
        body {
            background: url(/Content/Backgrounds/bg-12.png);
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            margin: 0;
            margin-bottom: 3rem !important;
            font-family: Verdana, Geneva, Tahoma, sans-serif;
            text-align: center;
            font-size: 12px;
        }

        html {
            overflow-y: scroll;
        }

        a {
            color: #2d5a90;
            text-decoration: none;
        }

        /* Header section */
        .header {
            margin: 2rem;
            font-size: 25px;
            font-family: Verdana;
            color: #FFFFFF;
            font-weight: normal !important;
            text-shadow: 0px 0px 5px #000000;
        }

        /* Anime list status block section */
        .list-status-block {
            background-image: url(/Content/Backgrounds/bg-03.jpg);
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
        }

        /* Anime list section */
        .list-container {
            background: #FFFFFF;
            position: relative;
            width: 100%;
            border: #E1E1E1 1px solid;
            border-radius: 5px;
            margin-right: auto;
            margin-bottom: 0;
            margin-left: auto;
            text-align: left;
        }

        /* Status menu block and status menu */
        .status-menu-block {
            width: 100%;
            height: 46px;
            border: 0;
            margin-top: 2px;
        }

            .status-menu-block .status-menu {
                display: table;
                border-collapse: separate;
                border-spacing: 40px 0;
                margin: 0 auto;
            }

            .status-menu-block .search-button {
                position: absolute;
                top: 12px;
                right: 10px;
            }

            .status-menu-block .status-menu .status-button {
                position: relative;
                display: table-cell;
                font-family: Verdana;
                text-align: center;
                vertical-align: middle;
                font-size: 1.3em;
                color: #343a40;
                padding: 10px 0;
                margin: 0;
            }

                .status-menu-block .status-menu .status-button.on {
                    font-weight: bold;
                    color: #212529;
                }

                .status-menu-block .status-menu .status-button:after {
                    display: block;
                    background-color: #343a40;
                    position: absolute;
                    left: 0px;
                    bottom: 0px;
                    overflow: hidden;
                    width: 100%;
                    height: 3px;
                    content: '';
                    opacity: 0;
                    -webkit-transition-property: all;
                    -moz-transition-property: all;
                    -o-transition-property: all;
                    transition-property: all;
                    -webkit-transition-timing-function: cubic-bezier(0.42,0,0.58,1);
                    -moz-transition-timing-function: cubic-bezier(0.42,0,0.58,1);
                    -o-transition-timing-function: cubic-bezier(0.42,0,0.58,1);
                    transition-timing-function: cubic-bezier(0.42,0,0.58,1);
                    -webkit-transition-duration: 0.3s;
                    -moz-transition-duration: 0.3s;
                    -o-transition-duration: 0.3s;
                    transition-duration: 0.3s;
                }

                .status-menu-block .status-menu .status-button.on:after, .status-menu .status-button:hover:after {
                    padding: 0;
                    margin: 0;
                    opacity: 1;
                }

        /* List table container - List block */
        .list-block {
            margin-top: 10px;
            padding: 0;
        }

        .list-table-container {
            margin: 0 2rem;
            display: block;
            padding-bottom: 2rem;
        }

        .list-status-block {
            text-align: center;
            color: #FFFFFF !important;
            font-family: Verdana;
            font-size: 22px;
            font-weight: bold;
            padding: 0.4em;
            border-radius: 5px 5px 0 0;
            box-shadow: 0 0 0 1px #E1E1E1; /* this draws the table border  */
        }

        /* Anime list table */

        .anime-list-table {
            border: #E1E1E1 1px solid;
            border-collapse: collapse;
            margin: 0 auto;
            width: 100%;
            font-size: 12px;
            border-radius: 0 0 5px 5px;
            border-style: hidden; /*hide standard table (collapsed) border */
            box-shadow: 0 0 0 1px #e1e1e1; /*this draws the table border  */
        }

            /* Anime list table header */

            .anime-list-table .anime-list-table-header .header-title {
                text-align: center;
                vertical-align: middle;
                border-bottom: #E1E1E1 1px solid;
                display: table-cell;
                height: 40px;
                font-size: 12px;
            }

        .header-title.type {
            padding-right: 6px;
        }

        /* Animes in anime list table */

        .anime-list-table .anime-list-table-list-item-data .list-item-data {
            display: table-cell;
            padding: 0.75rem 0;
            text-align: center;
            vertical-align: middle;
            border-bottom: 1px solid #E1E1E1;
        }

            .anime-list-table .anime-list-table-list-item-data .list-item-data.poster .poster {
                width: 48px;
                height: 68px;
                border-radius: 3px;
            }

            .anime-list-table .anime-list-table-list-item-data .list-item-data.title {
                padding-left: 10px;
                text-align: left;
                word-wrap: break-word;
                font-weight: bold;
            }

            .anime-list-table .anime-list-table-list-item-data .list-item-data.status {
                text-align: center;
            }

            .anime-list-table .anime-list-table-list-item-data .list-item-data.type {
                padding-right: 6px;
            }

            .anime-list-table .anime-list-table-list-item-data .list-item-data.progress {
                padding-left: 0.6rem;
            }

        .list-item-data.index {
            width: 5%;
        }

        .list-item-data.poster {
            width: 7%;
        }

        .list-item-data.title {
            width: 46%;
        }

        .list-item-data.type {
            width: 8%;
        }

        .list-item-data.progress {
            width: 9%;
        }

        .list-item-data.status {
            width: 15%;
        }

        .list-item-data.edit-button {
            width: 5%;
        }

        .list-item-data.remove-button {
            width: 6%;
        }

        .list-item-data.typenone {
            padding: 0 !important;
        }

        .list-item-data.progressnone {
            padding: 0 !important;
        }

        /* Miscellaneous CSS */

        .typenone {
            padding: 0 !important;
        }

        .progressnone {
            padding: 0 !important;
        }

        .input {
            font-size: 12px;
        }

        .navbar {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .status-button {
            text-decoration: none !important;
        }

        .noanime {
            text-align: center !important;
            font-size: 20px;
            margin: 2rem;
        }

        .progress {
            background: none;
        }

        #navbarDropdown {
            font-size: 16px;
        }

        .progress-input {
            width: 45%;
            border: 1px solid #969696 !important;
            font-size: 12px;
            height: 1.2rem;
            text-align: center;
            display: inline-block;
        }

        select {
            border: 1px solid #969696 !important;
        }

        .searchbtn {
            margin-top: 1px;
            padding-top: 0;
            margin-right: 30px;
            border: 1px solid #969696;
            border-radius: 5px;
            font: 10px;
            width: 71%;
        }

        .modal {
            overflow-y: auto;
        }

        .modal-open {
            overflow: auto;
        }

            .modal-open[style] {
                padding-right: 15px !important;
            }

        #searchModalLabel {
            font: 16px;
        }

        .clearbtn {
            border: 1px solid #E1E1E1 !important;
            padding: 5px 10px;
        }

        .search-anime-button {
            border: 1px solid #969696 !important;
            padding: 0.3rem 1rem;
            background-color: #fafafa;
            color: #000;
            margin: 0;
        }

        .modal-header {
            border-bottom: 0 none;
            padding-bottom: 0;
        }

        .modal-body {
            padding: 1.5rem 1rem;
        }

        .modal-footer {
            border-top: 0 none;
            padding-right: 1rem;
            padding-bottom: 1rem;
            padding-top: 0;
        }

        /* Hide input arrows */
        /* Chrome, Safari, Edge, Opera */
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }
    </style>
    <link href="~/Content/login/fonts/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <!-- Check if user account username is null -->
    <title>
        @if (ViewBag.AccountUsername != null)
        {
            @Html.Raw(ViewBag.AccountUsername + "'s Anime List - Wibu Anime List")
        }
        else
        {
            @Html.Raw("User Anime List - Wibu Anime List")
        }
    </title>
</head>
<body>
    <div class="header font-weight-bold">
        <!-- Check if user account username is null -->
        Viewing
        @if (ViewBag.AccountUsername != null)
        {
            @Html.Raw(ViewBag.AccountUsername + "'s")
        }
        else
        {
            @Html.Raw("User")
        }
        Anime List
    </div>

    <!-- Container for status menu and search button -->
    <div id="list-container" class="list-container">
        <div id="status-menu" class="status-menu-block">
            <div class="status-menu">
                <a id="all_anime" href="ViewAnimeList?accountId=@ViewBag.AccountId&listStatus=0"
                   class="status-button all_anime">All Anime</a>
                <a id="watching" href="ViewAnimeList?accountId=@ViewBag.AccountId&listStatus=1"
                   class="status-button watching">Currently Watching</a>
                <a id="completed" href="ViewAnimeList?accountId=@ViewBag.AccountId&listStatus=2"
                   class="status-button completed">Completed</a>
                <a id="onhold" href="ViewAnimeList?accountId=@ViewBag.AccountId&listStatus=3"
                   class="status-button onhold">On Hold</a>
                <a id="dropped" href="ViewAnimeList?accountId=@ViewBag.AccountId&listStatus=4"
                   class="status-button dropped">Dropped</a>
                <a id="plantowatch" href="ViewAnimeList?accountId=@ViewBag.AccountId&listStatus=5"
                   class="status-button plantowatch">Plan to Watch</a>
                <!-- Search button -->
                <div class="search-button">
                    <button class="btn searchbtn" data-toggle="modal" data-target="#searchModal">
                        <i class="fa fa-search fa-lg"></i>
                    </button>
                </div>
                <!-- Search modal -->
                <div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <!-- Modal header -->
                            <div class="modal-header">
                                <h5 class="modal-title" id="searchModalLabel">Search anime in the list</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <!-- Modal body (input form) -->
                            <form action="@Url.Action("ViewListSearchResult", "Anime")">
                                <div class="modal-body">
                                    <input type="hidden" name="accountId" value="@((Session["User"] as Account).Id)" />
                                    <input type="hidden" name="listStatus" value="0" />
                                    <input id="search-input" class="form-control" name="searchValue" type="text" value="" placeholder="Enter the name of anime to search" required />
                                </div>
                                <div class="modal-footer">
                                    <button id="search-anime-button" type="submit" class="btn search-anime-button">Search</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- List block to display table of animes in list -->
        <div class="list-block">
            <div class="list-table-container all_anime">
                <!-- List status block indicates which status tab user is at -->
                <div class="list-status-block">
                    @if (ViewBag.ListStatus == 0)
                    {
                        <span class="text">ALL ANIME</span>
                    }
                    else if (ViewBag.ListStatus == 1)
                    {
                        <span class="text">CURRENTLY WATCHING</span>
                    }
                    else if (ViewBag.ListStatus == 2)
                    {
                        <span class="text">COMPLETED</span>
                    }
                    else if (ViewBag.ListStatus == 3)
                    {
                        <span class="text">ON HOLD</span>
                    }
                    else if (ViewBag.ListStatus == 4)
                    {
                        <span class="text">DROPPED</span>
                    }
                    else if (ViewBag.ListStatus == 5)
                    {
                        <span class="text">PLAN TO WATCH</span>
                    }
                </div>

                <!-- If user is logged in and their account ID equals the list's account ID -->
                @if (Session["User"] != null && ViewBag.AccountId == ((Session["User"] as Account).Id))
                {
                    <!-- Form to send data to server, used in conjunction with JQuery to check for inputs -->
                    <form hidden action="@Url.Action("EditRemoveAnimeList", "Anime")" method="POST" id="edit-form">
                        <input type="hidden" id="edit-liststatus" name="listStatus" value="@ViewBag.ListStatus" />
                        <input type="hidden" id="edit-accountid" name="accountId" value="@ViewBag.AccountId" />
                        <input type="hidden" id="edit-episode" name="episode" value="" />
                        <input type="hidden" id="edit-animeid" name="animeId" value="" />
                        <input type="hidden" id="edit-progress" name="progress" value="" />
                        <input type="hidden" id="edit-status" name="status" value="" />
                        <input type="hidden" id="edit-btnaction" name="btnAction" value="" />
                    </form>
                    <!-- Table for anime list -->
                    <table class="anime-list-table" id="myListTable">
                        <!-- Table headers -->
                        <thead>
                            <tr class="anime-list-table-header">
                                <th class="header-title index">No.</th>
                                <th class="header-title poster pl-1">Poster</th>
                                <th class="header-title title">Anime Title</th>
                                <th class="header-title type">Type</th>
                                <th class="header-title progress">Progress</th>
                                <th class="header-title status">Status</th>
                                <th class="header-title edit pr-0 pl-2">Edit</th>
                                <th class="header-title remove pr-3 pl-3">Remove</th>
                            </tr>
                        </thead>

                        <!-- Table body -->
                        <tbody class="list-item">
                            @{ int animeIndex = 0; }
                            <!-- If there are any animes in the list -->
                            @if (ViewBag.AnimeDetailList != null && ViewBag.AnimeDetailList.Count != 0)
                            {
                                <!-- Iterate over all animes in list to display -->
                                foreach (FDMSWeb.Models.Anime anime in ViewBag.AnimeDetailList)
                                {
                                    FDMSWeb.Models.List listAnime = ViewBag.AnimeList[animeIndex];
                                    animeIndex++;
                                    <tr class="anime-list-table-list-item-data">
                                        <td class="list-item-data index text-center">@animeIndex</td>

                                        <td class="list-item-data poster text-center">
                                            <a href="ViewAnime?id=@anime.Id" class="link sort">
                                                <img src="~/Content/Images/Posters/@anime.Poster" class="hover-info poster">
                                            </a>
                                        </td>

                                        <td class="list-item-data title clearfix text-wrap">
                                            <a href="ViewAnime?id=@anime.Id" class="link sort">@anime.Name</a>
                                        </td>

                                        <td class="list-item-data type text-center">
                                            @anime.Type
                                        </td>

                                        <td class="list-item-data progress text-left">
                                            <input id="progress-@anime.Id" size="1" type="number" min="0" max="9999" name="progress" class="inputtext form-control-sm text-left pl-1 progress-input" value="@listAnime.Progress" required>
                                            @Html.Raw("/")
                                            <!-- Check if anime is currently airing -->
                                            @if (anime.Episodes != 0)
                                            {
                                                @Html.Raw(anime.Episodes)
                                            }
                                            else
                                            {
                                                @Html.Raw("?")
                                            }
                                        </td>

                                        <td class="list-item-data status">
                                            <select id="status-@anime.Id" name="status">
                                                @{int statusIndex = 1; }
                                                <!-- Add statuses from status list to drop down list -->
                                                @foreach (String status in ViewBag.StatusList)
                                                {
                                                    <!-- Default selection to status of anime in list -->
                                                    if (!status.Equals(listAnime.Status))
                                                    {
                                                        <option value="@statusIndex"> @status </option>
                                                        <br />
                                                    }
                                                    else
                                                    {
                                                        <option value="@statusIndex" selected="selected"> @status </option>
                                                        <br />
                                                    }
                                                    statusIndex++;
                                                }
                                            </select>
                                        </td>
                                        <td class="list-item-data pr-0 pl-2 text-center edit-button">
                                            <input type="button" name="btnAction" value="Edit" onclick="edit(@anime.Id, @anime.Episodes)" />
                                        </td>
                                        <td class="list-item-data pr-3 pl-3 text-center remove-button">
                                            <input type="button" name="btnAction" value="Remove" onclick="remove(@anime.Id, @anime.Episodes, '@anime.Name')" />
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <!-- If there are no animes in the list -->
                    if (ViewBag.AnimeDetailList == null || ViewBag.AnimeDetailList.Count == 0)
                    {
                        <!-- If user is on "All Anime" tab -->
                        if (ViewBag.ListStatus == 0)
                        {
                            <div class="noanime">There are no animes in the list </div>
                        }
                        else if (ViewBag.ListStatus < 6)
                        {
                            <div class="noanime">There are no animes in the list with status "@ViewBag.StatusList[@ViewBag.ListStatus - 1]" </div>
                        }
                    }
                }
                else
                {
                    /* If user is not logged in or their account ID differs from the list's account ID */
                    <table class="anime-list-table" id="myListTable">
                        <!-- Table headers -->
                        <thead>
                            <tr class="anime-list-table-header">
                                <th class="header-title index">No.</th>
                                <th class="header-title poster pl-1">Poster</th>
                                <th class="header-title title">Anime Title</th>
                                <th class="header-title type typenone">Type</th>
                                <th class="header-title progress progressnone">Progress</th>
                                <th class="header-title status">Status</th>
                            </tr>
                        </thead>
                        <!-- Table body -->
                        <tbody class="list-item">
                            @{ int animeIndex = 0; }
                            <!-- Check if there are any animes in the list -->
                            @if (ViewBag.AnimeDetailList != null && ViewBag.AnimeDetailList.Count != 0)
                            {
                                <!-- Iterate over all animes in list to display -->
                                foreach (FDMSWeb.Models.Anime anime in ViewBag.AnimeDetailList)
                                {
                                    FDMSWeb.Models.List listAnime = ViewBag.AnimeList[animeIndex];
                                    animeIndex++;
                                    <tr class="anime-list-table-list-item-data">
                                        <td class="list-item-data index text-center">@animeIndex</td>

                                        <td class="list-item-data poster text-center">
                                            <a href="ViewAnime?id=@anime.Id" class="link sort">
                                                <img src="~/Content/Images/Posters/@anime.Poster" class="hover-info poster">
                                            </a>
                                        </td>

                                        <td class="list-item-data title clearfix text-wrap">
                                            <a href="ViewAnime?id=@anime.Id" class="link sort">@anime.Name</a>
                                        </td>

                                        <td class="list-item-data type typenone text-center">
                                            @anime.Type
                                        </td>

                                        <td class="list-item-data progress progressnone text-center">
                                            @listAnime.Progress
                                            @Html.Raw("/")
                                            <!-- Check if anime is currently airing -->
                                            @if (anime.Episodes != 0)
                                            {
                                                @Html.Raw(anime.Episodes)
                                            }
                                            else
                                            {
                                                @Html.Raw("?")
                                            }
                                        </td>

                                        <td class="list-item-data status">
                                            @listAnime.Status
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <!-- If there are no animes in the list -->
                    if (ViewBag.AnimeDetailList == null || ViewBag.AnimeDetailList.Count == 0)
                    {
                        <!-- If user is on "All Anime" tab -->
                        if (ViewBag.ListStatus == 0)
                        {
                            <div class="noanime">There are no animes in the list </div>
                        }
                        else if (ViewBag.ListStatus < 6)
                        {
                            <div class="noanime">There are no animes in the list with status "@ViewBag.StatusList[@ViewBag.ListStatus - 1]" </div>
                        }
                    }
                }
            </div>
        </div>
    </div>

    <script>
        /* Functions to edit and remove anime and check inputs */ 
        function edit(animeId, episode) {
            if (episode == 0 && $('#status-' + animeId + ' :selected').val() == 2) {
                alert('You cannot mark the status as "Completed"! The anime is currently airing and has not yet finished airing!');
            } else {
                $('#edit-animeid').val(animeId);
                $('#edit-episode').val(episode);
                $('#edit-progress').val($('#progress-' + animeId).val());
                $('#edit-status').val($('#status-' + animeId + ' :selected').val());
                $('#edit-btnaction').val('Edit');
                $('#edit-form').submit();
            }
        }

        function remove(animeId, episode, animeName) {
            if (confirm('Are you sure you want to remove \'' + animeName + '\' from your list?')) {
                $('#edit-animeid').val(animeId);
                $('#edit-episode').val(episode);
                $('#edit-progress').val($('#progress-' + animeId).val());
                $('#edit-status').val($('#status-' + animeId + ' :selected').val());
                $('#edit-btnaction').val('Remove');
                $('#edit-form').submit();
            }
        }

        /* Check for white space only input in search field */
        $('#search-anime-button').click(function () {
            if ($.trim($('#search-input').val()) == '') {
                alert('Your input cannot contain only white spaces!');
                return false;
            }
        });

        /* Focus to field upon open modal */
        $('#searchModal').on('shown.bs.modal', function () {
            $('#search-input').focus();
        });

        /* Script to show search modal */
        $(document).ready(function () {
            $('#search-button').click(function () {
                $('.modal').modal('show');
            });
        });

        /* Switching tab underline effects */
                var status = parseInt('@ViewBag.ListStatus');
        if (status == 0) {
            document.getElementById('all_anime').classList.add("on");
            document.getElementById('watching').classList.remove("on");
            document.getElementById('completed').classList.remove("on");
            document.getElementById('onhold').classList.remove("on");
            document.getElementById('dropped').classList.remove("on");
            document.getElementById('plantowatch').classList.remove("on");
        } else if (status == 1) {
            document.getElementById('all_anime').classList.remove("on");
            document.getElementById('watching').classList.add("on");
            document.getElementById('completed').classList.remove("on");
            document.getElementById('onhold').classList.remove("on");
            document.getElementById('dropped').classList.remove("on");
            document.getElementById('plantowatch').classList.remove("on");
        } else if (status == 2) {
            document.getElementById('all_anime').classList.remove("on");
            document.getElementById('watching').classList.remove("on");
            document.getElementById('completed').classList.add("on");
            document.getElementById('onhold').classList.remove("on");
            document.getElementById('dropped').classList.remove("on");
            document.getElementById('plantowatch').classList.remove("on");
        } else if (status == 3) {
            document.getElementById('all_anime').classList.remove("on");
            document.getElementById('watching').classList.remove("on");
            document.getElementById('completed').classList.remove("on");
            document.getElementById('onhold').classList.add("on");
            document.getElementById('dropped').classList.remove("on");
            document.getElementById('plantowatch').classList.remove("on");
        } else if (status == 4) {
            document.getElementById('all_anime').classList.remove("on");
            document.getElementById('watching').classList.remove("on");
            document.getElementById('completed').classList.remove("on");
            document.getElementById('onhold').classList.remove("on");
            document.getElementById('dropped').classList.add("on");
            document.getElementById('plantowatch').classList.remove("on");
        } else if (status == 5) {
            document.getElementById('all_anime').classList.remove("on");
            document.getElementById('watching').classList.remove("on");
            document.getElementById('completed').classList.remove("on");
            document.getElementById('onhold').classList.remove("on");
            document.getElementById('dropped').classList.remove("on");
            document.getElementById('plantowatch').classList.add("on");
        }
    </script>
</body>
</html>

